/*! csv v0.0.3 | MIT | https://github.com/hd-code/web-snippets */
function serialize(e){var n=extractKeys(e);return stringifyRows([n,...makeRows(e,n)])}function parse(e){var[e,...n]=extractRows(e);return parseObjects(e,n)}function extractKeys(t){const r={};for(let e=0,n=t.length;e<n;e++)for(const s in t[e])r[s]||(r[s]=!0);return Object.keys(r)}function makeRows(e,n){return e.map(e=>makeRow(e,n))}function makeRow(n,e){return e.map(e=>n[e])}function stringifyRows(e){const n=e.map(e=>stringifyRow(e));return n.join("\n")}function stringifyRow(e){const n=e.map(e=>stringifyEntry(e));return n.join(",")}function stringifyEntry(e){return void 0===e||"function"==typeof e?"":escape("object"==typeof e?JSON.stringify(e):""+e)}function escape(e){return hasToBeEscaped(e)?'"'+e.replace(/"/g,'""')+'"':e}function hasToBeEscaped(e){return e.includes(",")||e.includes('"')||e.includes("\n")}const regexRow=/(([^\r\n"])|("([^"]|"")*"))+/g,regexEntry=/(([^,"])|("([^"]|"")*"))+/g,regexEscaped=/("([^"]|"")*")/,regex2Quotes=/""/g;function extractRows(e){const n=e.match(regexRow);return n?n.map(extractRow):[["invalid file"]]}function extractRow(e){e=e.match(regexEntry);return null===e?[]:e}function parseObjects(n,e){return e.map(e=>parseObject(n,e))}function parseObject(e,t){const r={};return e.forEach((e,n)=>{n=t[n];void 0!==n&&(r[e]=parseValue(n))}),r}function parseValue(e){switch(e){case"":return;case"null":return null;case"false":return!1;case"true":return!0}var n=+e;return isNaN(n)?isEscaped(e)?unescape(e):e:n}function isEscaped(e){return regexEscaped.test(e)}function unescape(e){const n=e.substring(1,e.length-1);return n.replace(regex2Quotes,'"')}export{serialize,parse};