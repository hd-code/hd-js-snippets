/*! csv v0.0.2 | MIT | https://github.com/hd-code/web-snippets */
export function serialize(e){const n=extractKeys(e);return stringifyRows([n,...makeRows(e,n)])};export function parse(e){const[n,...t]=extractRows(e);return parseObjects(n,t)};function extractKeys(e){const n={};for(let t=0,r=e.length;t<r;t++){const r=e[t];for(const e in r)n[e]||(n[e]=!0)}return Object.keys(n)}function makeRows(e,n){return e.map(e=>makeRow(e,n))}function makeRow(e,n){return n.map(n=>e[n])}function stringifyRows(e){return e.map(e=>stringifyRow(e)).join("\n")}function stringifyRow(e){return e.map(e=>stringifyEntry(e)).join(",")}function stringifyEntry(e){return void 0===e||"function"==typeof e?"":escape("object"==typeof e?JSON.stringify(e):""+e)}function escape(e){return hasToBeEscaped(e)?'"'+e.replace(/"/g,'""')+'"':e}function hasToBeEscaped(e){return e.includes(",")||e.includes('"')||e.includes("\n")}const regexRow=/(([^\n"])|("([^"]|"")*"))+/g,regexEntry=/(([^,"])|("([^"]|"")*"))+/g,regexEscaped=/("([^"]|"")*")/g,regex2Quotes=/""/g;function extractRows(e){const n=e.match(regexRow);return n?n.map(extractRow):[["invalid file"]]}function extractRow(e){const n=e.match(regexEntry);return null===n?[]:n}function parseObjects(e,n){return n.map(n=>parseObject(e,n))}function parseObject(e,n){const t={};return e.forEach((e,r)=>{const s=n[r];void 0!==s&&(t[e]=parseValue(s))}),t}function parseValue(e){switch(e){case"":return;case"null":return null;case"false":return!1;case"true":return!0}const n=+e;return isNaN(n)?isEscaped(e)?unescape(e):e:n}function isEscaped(e){return regexEscaped.test(e)}function unescape(e){return e.substring(1,e.length-1).replace(regex2Quotes,'"')}