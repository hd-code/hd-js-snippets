/*! testutil v0.0.1 | MIT | https://github.com/hd-code/web-snippets */
import*as assert from"assert";function testFunc(e,t){const i=t instanceof Array?toCaseMap(t):t;describe(e.name,()=>{for(const t in i){const n=i[t][0],r=i[t][1];it(t,()=>{var t=e(...n);"object"==typeof t?assert.deepStrictEqual(t,r):assert.strictEqual(t,r)})}})}function toCaseMap(t){let r={};return t.forEach(t=>{var n=getName(t);r[n]=t}),r}function getName(t){var n;return`(${(null===(n=t[0])||void 0===n?void 0:n.map(toString).join(", "))||""}) => ${toString(t[1])}`}const maxStringLen=10;function toString(t){return t instanceof Array?`[${clipString(t.map(toString).join(","),maxStringLen-2)}]`:clipString(""+t,maxStringLen)}function clipString(t,n){return t.length<=n?t:t.slice(0,n-1)+"â€¦"}export{testFunc};