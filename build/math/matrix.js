"use strict";function isMatrix(t){var e,r;if(!(t instanceof Array))return!1;const n=null===(r=null===(e=null===t||void 0===t?void 0:t[0])||void 0===e?void 0:e[0])||void 0===r?void 0:r.length;if(!n)return!1;for(let e=0,r=t.length;e<r;e++){const r=t[e];if(!(r instanceof Array)||n!==r.length)return!1;for(let t=0,e=r.length;t<e;t++){if("number"!=typeof r[t])return!1}}return!0}function det(t){return 0}function flatten(t){const e=[];for(let r=0,n=t.length;r<n;r++)for(let n=0,o=t[r].length;n<o;n++)e.push(t[r][n]);return e}function transpose(t){const e=[];for(let r=0,n=t[0].length;r<n;r++){e.push([]);for(let n=0,o=t.length;n<o;n++){if(void 0===t[n][r])return[];e[r].push(t[n][r])}}return e}function add(t,e){if(t.length!==e.length)return[];const r=[];for(let n=0,o=t.length;n<o;n++){if(t[n].length!==e[n].length)return[];r.push([]);for(let o=0,l=t[n].length;o<l;o++)r[n].push(t[n][o]+e[n][o])}return r}function sub(t,e){if(t.length!==e.length)return[];const r=[];for(let n=0,o=t.length;n<o;n++){if(t[n].length!==e[n].length)return[];r.push([]);for(let o=0,l=t[n].length;o<l;o++)r[n].push(t[n][o]-e[n][o])}return r}function mul(t,e){const r=[];for(let n=0,o=t.length;n<o;n++){r.push([]);for(let o=0,l=e[0].length;o<l;o++){r[n].push(0);for(let l=0,s=t[n].length;l<s;l++){if(void 0===e[l][o])return[];r[n][o]+=t[n][l]*e[l][o]}}}return r}function dotMul(t,e){if(t.length!==e.length)return[];const r=[];for(let n=0,o=t.length;n<o;n++){if(t[n].length!==e[n].length)return[];r.push([]);for(let o=0,l=t[n].length;o<l;o++)r[n].push(t[n][o]*e[n][o])}return r}function scale(t,e){const r=[];for(let n=0,o=e.length;n<o;n++){r.push([]);for(let o=0,l=e[n].length;o<l;o++)r[n].push(t*e[n][o])}return r}function mulVector(t,e){const r=[];for(let n=0,o=t.length;n<o;n++){const o=t[n];if(o.length!==e.length)return[];r.push(0);for(let t=0,l=o.length;t<l;t++)r[n]+=o[t]*e[t]}return r}Object.defineProperty(exports,"__esModule",{value:!0}),exports.mulVector=exports.scale=exports.dotMul=exports.mul=exports.sub=exports.add=exports.transpose=exports.flatten=exports.det=exports.isMatrix=void 0,exports.isMatrix=isMatrix,exports.det=det,exports.flatten=flatten,exports.transpose=transpose,exports.add=add,exports.sub=sub,exports.mul=mul,exports.dotMul=dotMul,exports.scale=scale,exports.mulVector=mulVector;