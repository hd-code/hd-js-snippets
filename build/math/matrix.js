/*! matrix v0.0.1 | MIT | © Hannes Dröse https://github.com/hd-code/js-snippets */
export function isMatrix(t){var e;if(!(t instanceof Array))return!1;if(0===t.length)return!0;const n=null===(e=t[0])||void 0===e?void 0:e.length;if(void 0===n)return!1;for(let e=0,r=t.length;e<r;e++){const r=t[e];if(!(r instanceof Array)||n!==r.length)return!1;for(let t=0,e=r.length;t<e;t++){if("number"!=typeof r[t])return!1}}return!0};export function flatten(t){const e=[];for(let n=0,r=t.length;n<r;n++)for(let r=0,l=t[n].length;r<l;r++)e.push(t[n][r]);return e};export function transpose(t){const e=[];for(let n=0,r=t[0].length;n<r;n++){e.push([]);for(let r=0,l=t.length;r<l;r++){if(void 0===t[r][n])return[];e[n].push(t[r][n])}}return e};export function add(t,e){if(t.length!==e.length)return[];const n=[];for(let r=0,l=t.length;r<l;r++){if(t[r].length!==e[r].length)return[];n.push([]);for(let l=0,o=t[r].length;l<o;l++)n[r].push(t[r][l]+e[r][l])}return n};export function sub(t,e){if(t.length!==e.length)return[];const n=[];for(let r=0,l=t.length;r<l;r++){if(t[r].length!==e[r].length)return[];n.push([]);for(let l=0,o=t[r].length;l<o;l++)n[r].push(t[r][l]-e[r][l])}return n};export function mul(t,e){const n=[];for(let r=0,l=t.length;r<l;r++){n.push([]);for(let l=0,o=e[0].length;l<o;l++){n[r].push(0);for(let o=0,u=t[r].length;o<u;o++){if(void 0===e[o][l])return[];n[r][l]+=t[r][o]*e[o][l]}}}return n};export function mulElements(t,e){if(t.length!==e.length)return[];const n=[];for(let r=0,l=t.length;r<l;r++){if(t[r].length!==e[r].length)return[];n.push([]);for(let l=0,o=t[r].length;l<o;l++)n[r].push(t[r][l]*e[r][l])}return n};export function scale(t,e){const n=[];for(let r=0,l=e.length;r<l;r++){n.push([]);for(let l=0,o=e[r].length;l<o;l++)n[r].push(t*e[r][l])}return n};export function mulVector(t,e){const n=[];for(let r=0,l=t.length;r<l;r++){const l=t[r];if(l.length!==e.length)return[];n.push(0);for(let t=0,o=l.length;t<o;t++)n[r]+=l[t]*e[t]}return n};