"use strict";
/*! math v2.0.0 from hd-snippets-js | MIT | © Hannes Dröse https://github.com/hd-code/hd-snippets-js */var Vector,Matrix,__spreadArrays=this&&this.__spreadArrays||function(){for(var r=0,n=0,t=arguments.length;n<t;n++)r+=arguments[n].length;var u=Array(r),e=0;for(n=0;n<t;n++)for(var o=arguments[n],i=0,c=o.length;i<c;i++,e++)u[e]=o[i];return u};function add(r,n){return r+n}function sub(r,n){return r-n}function mul(r,n){return r*n}function div(r,n){return 0===n?NaN:r/n}function mod(r,n){return 0===n?NaN:r%n}function round(r,n){void 0===n&&(n=0);var t=Math.pow(10,n);return Math.round(r*t)/t}function dec2bin(r,n){for(var t=(r>>>0).toString(2),u="",e=0;e<(null!=n?n:0);e++)u+="0";return n?(u+t).slice(-n):t}function dec2binArray(r,n){for(var t=dec2bin(r,n),u=[],e=0,o=t.length;e<o;e++)u.push(parseInt(t[e]));return u}Object.defineProperty(exports,"__esModule",{value:!0}),exports.add=add,exports.sub=sub,exports.mul=mul,exports.div=div,exports.mod=mod,exports.round=round,function(r){function n(r){return r.reduce(noNameSpace.add)}function t(u,e){return u.reduce(function(r,n,t){return r+u[t]*e[t]},0)}r.isVector=function(r){return Array.isArray(r)&&r.every(function(r){return"number"==typeof r})},r.sum=n,r.avg=function(r){return n(r)/r.length},r.median=function(r){if(0===r.length)return 0;var n=__spreadArrays(r);n.sort(noNameSpace.sub);var t=Math.floor(n.length/2);return n.length%2?n[t]:(n[t-1]+n[t])/2},r.mag=function(r){return Math.sqrt(t(r,r))},r.add=function(t,u){return t.map(function(r,n){return t[n]+u[n]})},r.sub=function(t,u){return t.map(function(r,n){return t[n]-u[n]})},r.mul=function(t,u){return t.map(function(r,n){return t[n]*u[n]})},r.dot=t,r.scale=function(n,r){return r.map(function(r){return r*n})},r.mulMatrix=function(r,n){var t=Matrix.transpose(n);return Matrix.mulVector(t,r)},r.round=function(r,n){return void 0===n&&(n=0),r.map(function(r){return noNameSpace.round(r,n)})}}(Vector=exports.Vector||(exports.Vector={})),function(r){r.isMatrix=function(r){var n,t=r&&(null===(n=r[0])||void 0===n?void 0:n.length);return Array.isArray(r)&&r.every(function(r){return Vector.isVector(r)})&&r.every(function(r){return r.length===t})},r.transpose=function(t){return t[0].map(function(r,n){return t.map(function(r){return r[n]})})},r.add=function(t,u){return t.map(function(r,n){return Vector.add(t[n],u[n])})},r.sub=function(t,u){return t.map(function(r,n){return Vector.sub(t[n],u[n])})},r.mul=function(t,u){return t.map(function(r,n){return Vector.mul(t[n],u[n])})},r.scale=function(n,r){return r.map(function(r){return Vector.scale(n,r)})},r.mulVector=function(r,n){return r.map(function(r){return Vector.dot(r,n)})},r.round=function(r,n){return void 0===n&&(n=0),r.map(function(r){return Vector.round(r,n)})}}(Matrix=exports.Matrix||(exports.Matrix={})),exports.dec2bin=dec2bin,exports.dec2binArray=dec2binArray;var noNameSpace={add:add,sub:sub,mul:mul,div:div,mod:mod,round:round};