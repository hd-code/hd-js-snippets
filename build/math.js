"use strict";function add(r,t){return r+t}function sub(r,t){return r-t}function mul(r,t){return r*t}function div(r,t){return 0===t?NaN:r/t}function mod(r,t){return 0===t?NaN:r%t}function round(r,t=0){const n=Math.pow(10,t);return Math.round(r*n)/n}var Vector,Matrix;function dec2bin(r,t){const n=(r>>>0).toString(2);let e="";for(let r=0,n=null!==t&&void 0!==t?t:0;r<n;r++)e+="0";return t?(e+n).slice(-t):n}function dec2binArray(r,t){const n=dec2bin(r,t);let e=[];for(let r=0,t=n.length;r<t;r++)e.push(parseInt(n[r]));return e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.dec2binArray=exports.dec2bin=exports.Matrix=exports.Vector=exports.round=exports.mod=exports.div=exports.mul=exports.sub=exports.add=void 0,exports.add=add,exports.sub=sub,exports.mul=mul,exports.div=div,exports.mod=mod,exports.round=round,function(r){function t(r){return r.reduce(noNameSpace.add)}function n(r,t){return r.reduce((n,e,o)=>n+r[o]*t[o],0)}r.isVector=function(r){return Array.isArray(r)&&r.every(r=>"number"==typeof r)},r.sum=t,r.avg=function(r){return t(r)/r.length},r.median=function(r){if(0===r.length)return 0;let t=[...r];t.sort(noNameSpace.sub);const n=Math.floor(t.length/2);return t.length%2?t[n]:(t[n-1]+t[n])/2},r.mag=function(r){return Math.sqrt(n(r,r))},r.add=function(r,t){return r.map((n,e)=>r[e]+t[e])},r.sub=function(r,t){return r.map((n,e)=>r[e]-t[e])},r.mul=function(r,t){return r.map((n,e)=>r[e]*t[e])},r.dot=n,r.scale=function(r,t){return t.map(t=>t*r)},r.mulMatrix=function(r,t){const n=Matrix.transpose(t);return Matrix.mulVector(n,r)},r.round=function(r,t=0){return r.map(r=>noNameSpace.round(r,t))}}(Vector=exports.Vector||(exports.Vector={})),function(r){r.isMatrix=function(r){var t;const n=r&&(null===(t=r[0])||void 0===t?void 0:t.length);return Array.isArray(r)&&r.every(r=>Vector.isVector(r))&&r.every(r=>r.length===n)},r.transpose=function(r){return r[0].map((t,n)=>r.map(r=>r[n]))},r.add=function(r,t){return r.map((n,e)=>Vector.add(r[e],t[e]))},r.sub=function(r,t){return r.map((n,e)=>Vector.sub(r[e],t[e]))},r.mul=function(r,t){return r.map((n,e)=>Vector.mul(r[e],t[e]))},r.scale=function(r,t){return t.map(t=>Vector.scale(r,t))},r.mulVector=function(r,t){return r.map(r=>Vector.dot(r,t))},r.round=function(r,t=0){return r.map(r=>Vector.round(r,t))}}(Matrix=exports.Matrix||(exports.Matrix={})),exports.dec2bin=dec2bin,exports.dec2binArray=dec2binArray;const noNameSpace={add:add,sub:sub,mul:mul,div:div,mod:mod,round:round};